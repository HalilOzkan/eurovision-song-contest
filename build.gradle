plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.2.0'
  id "org.sonarqube" version "2.8"
}

group = 'com.pega.exercise'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  vertxVersion = '3.9.1'
  junitJupiterEngineVersion = '5.6.0'
  slf4jVersion = '1.7.30'
  logbackVersion = '1.2.3'
}

application {
  mainClassName = 'com.pega.exercise.eurovision_song_contest.Launcher'
}

def mainVerticleName = 'com.pega.exercise.eurovision_song_contest.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  compile "org.slf4j:slf4j-api:$slf4jVersion"
  implementation "ch.qos.logback:logback-classic:$logbackVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-rx-java2:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-pg-client:$vertxVersion"
  implementation "io.vertx:vertx-web-api-contract:$vertxVersion"
  annotationProcessor "io.vertx:vertx-codegen:$vertxVersion:processor"
  annotationProcessor "io.vertx:vertx-web-api-service:$vertxVersion"
  compile "io.vertx:vertx-web-api-service:$vertxVersion"
  compile "io.vertx:vertx-service-proxy:$vertxVersion"
  implementation "io.vertx:vertx-sockjs-service-proxy:$vertxVersion"
  implementation "io.vertx:vertx-reactive-streams:$vertxVersion"
  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

shadowJar {
  archiveClassifier.set("fat")
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

sonarqube {
  properties {
    property "sonar.projectKey", "HalilOzkan_eurovision-song-contest"
    property "sonar.organization", "halilozkan"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", "640b578328a0649f54c6147c3678c874dc39909b"
  }
}
